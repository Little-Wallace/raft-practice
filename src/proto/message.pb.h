// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPutRequestImpl();
void InitDefaultsPutRequest();
void InitDefaultsHardStateImpl();
void InitDefaultsHardState();
void InitDefaultsDoneImpl();
void InitDefaultsDone();
inline void InitDefaults() {
  InitDefaultsPutRequest();
  InitDefaultsHardState();
  InitDefaultsDone();
}
}  // namespace protobuf_message_2eproto
namespace Node {
class Done;
class DoneDefaultTypeInternal;
extern DoneDefaultTypeInternal _Done_default_instance_;
class HardState;
class HardStateDefaultTypeInternal;
extern HardStateDefaultTypeInternal _HardState_default_instance_;
class PutRequest;
class PutRequestDefaultTypeInternal;
extern PutRequestDefaultTypeInternal _PutRequest_default_instance_;
}  // namespace Node
namespace Node {

// ===================================================================

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Node.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutRequest(PutRequest&& from) noexcept
    : PutRequest() {
    *this = ::std::move(from);
  }

  inline PutRequest& operator=(PutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutRequest* internal_default_instance() {
    return reinterpret_cast<const PutRequest*>(
               &_PutRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PutRequest* other);
  friend void swap(PutRequest& a, PutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PutRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Node.PutRequest)
 private:
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsPutRequestImpl();
};
// -------------------------------------------------------------------

class HardState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Node.HardState) */ {
 public:
  HardState();
  virtual ~HardState();

  HardState(const HardState& from);

  inline HardState& operator=(const HardState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HardState(HardState&& from) noexcept
    : HardState() {
    *this = ::std::move(from);
  }

  inline HardState& operator=(HardState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HardState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HardState* internal_default_instance() {
    return reinterpret_cast<const HardState*>(
               &_HardState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HardState* other);
  friend void swap(HardState& a, HardState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HardState* New() const PROTOBUF_FINAL { return New(NULL); }

  HardState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HardState& from);
  void MergeFrom(const HardState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HardState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint64 vote = 2;
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::google::protobuf::uint64 vote() const;
  void set_vote(::google::protobuf::uint64 value);

  // optional uint64 commit = 3;
  bool has_commit() const;
  void clear_commit();
  static const int kCommitFieldNumber = 3;
  ::google::protobuf::uint64 commit() const;
  void set_commit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Node.HardState)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_vote();
  void clear_has_vote();
  void set_has_commit();
  void clear_has_commit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 vote_;
  ::google::protobuf::uint64 commit_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsHardStateImpl();
};
// -------------------------------------------------------------------

class Done : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Node.Done) */ {
 public:
  Done();
  virtual ~Done();

  Done(const Done& from);

  inline Done& operator=(const Done& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Done(Done&& from) noexcept
    : Done() {
    *this = ::std::move(from);
  }

  inline Done& operator=(Done&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Done& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Done* internal_default_instance() {
    return reinterpret_cast<const Done*>(
               &_Done_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Done* other);
  friend void swap(Done& a, Done& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Done* New() const PROTOBUF_FINAL { return New(NULL); }

  Done* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Done& from);
  void MergeFrom(const Done& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Done* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Node.Done)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsDoneImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PutRequest

// optional bytes content = 1;
inline bool PutRequest::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRequest::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& PutRequest::content() const {
  // @@protoc_insertion_point(field_get:Node.PutRequest.content)
  return content_.GetNoArena();
}
inline void PutRequest::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Node.PutRequest.content)
}
#if LANG_CXX11
inline void PutRequest::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Node.PutRequest.content)
}
#endif
inline void PutRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Node.PutRequest.content)
}
inline void PutRequest::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Node.PutRequest.content)
}
inline ::std::string* PutRequest::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Node.PutRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_content() {
  // @@protoc_insertion_point(field_release:Node.PutRequest.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Node.PutRequest.content)
}

// -------------------------------------------------------------------

// HardState

// optional uint64 term = 1;
inline bool HardState::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HardState::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HardState::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HardState::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 HardState::term() const {
  // @@protoc_insertion_point(field_get:Node.HardState.term)
  return term_;
}
inline void HardState::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:Node.HardState.term)
}

// optional uint64 vote = 2;
inline bool HardState::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HardState::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HardState::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HardState::clear_vote() {
  vote_ = GOOGLE_ULONGLONG(0);
  clear_has_vote();
}
inline ::google::protobuf::uint64 HardState::vote() const {
  // @@protoc_insertion_point(field_get:Node.HardState.vote)
  return vote_;
}
inline void HardState::set_vote(::google::protobuf::uint64 value) {
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:Node.HardState.vote)
}

// optional uint64 commit = 3;
inline bool HardState::has_commit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HardState::set_has_commit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HardState::clear_has_commit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HardState::clear_commit() {
  commit_ = GOOGLE_ULONGLONG(0);
  clear_has_commit();
}
inline ::google::protobuf::uint64 HardState::commit() const {
  // @@protoc_insertion_point(field_get:Node.HardState.commit)
  return commit_;
}
inline void HardState::set_commit(::google::protobuf::uint64 value) {
  set_has_commit();
  commit_ = value;
  // @@protoc_insertion_point(field_set:Node.HardState.commit)
}

// -------------------------------------------------------------------

// Done

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Node

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
